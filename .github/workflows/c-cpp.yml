name: Build and Release

on:
  push:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Important for git history-based versioning
    
    - name: Generate version
      id: version
      run: |
        # Try to use last tag, or fall back to date-based version if no tags exist
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LATEST_TAG" ]; then
          # No tag exists, create date-based version
          VERSION="0.1.0-$(date +'%Y%m%d')"
        else
          # Tag exists, use it
          VERSION="${LATEST_TAG#v}"  # Remove 'v' prefix if present
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Using version: $VERSION"
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make libcurl4-openssl-dev libjson-c-dev libncurses-dev
    
    - name: Build project
      run: |
        make rebuild
        
    - name: Create package
      id: package
      run: |
        mkdir -p dist
        cp anime-cli dist/
        cp README.md LICENSE dist/
        echo "${{ steps.version.outputs.version }}" > dist/VERSION
        cd dist
        tar -czvf ../anime-cli.tar.gz *
    
    - name: Create Release and Upload Asset
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        RELEASE_NOTES="Automated build from commit ${{ github.sha }}\n\n**Changes in this release:**\n${{ github.event.head_commit.message }}"
        
        # Create release using GitHub CLI
        gh release create "v$VERSION" \
          --title "Release $VERSION" \
          --notes "$RELEASE_NOTES" \
          "./anime-cli.tar.gz#anime-cli-$VERSION.tar.gz" \
          --target ${{ github.ref }} \
          || echo "Failed to create release, it may already exist"